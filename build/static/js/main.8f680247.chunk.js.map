{"version":3,"sources":["services/phonebook.js","App.js","index.js"],"names":["axios","get","then","response","data","newPerson","post","person","delete","serverBaseUrl","id","put","Notification","notif","console","log","msgStyle","color","fontSize","borderRadius","padding","marginBottom","borderStyle","type","style","className","msg","Persons","persons","filter","setPersons","name","toLowerCase","includes","map","key","number","onClick","deletedPerson","window","confirm","phonebookService","catch","error","Filter","nameFilter","setNameFilter","value","onChange","event","target","PersonForm","newName","setNewName","newNumber","setNewNumber","setNotifMessage","onSubmit","preventDefault","existing","find","alert","updated","result","setTimeout","concat","App","useState","notifMessage","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f680247.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst serverBaseUrl=\"/api/persons\"\n\nconst getAll = () => {\n  const request = axios.get(serverBaseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newPerson => {\n  const request = axios.post(serverBaseUrl, newPerson)\n  return request.then(response => response.data)\n}\n\nconst deletePerson = person => {\n    return axios.delete(serverBaseUrl+\"/\"+person.id)\n}\n\nconst update = person => {\n    return axios.put(serverBaseUrl + \"/\" + person.id, person)\n    .then(response => response.data)\n}\n\nexport default { getAll, create, deletePerson, update }\n","import React, { useState, useEffect } from 'react'\nimport phonebookService from './services/phonebook'\n\nconst Notification = ({ notif }) => {\n  console.log(notif)\n  if (notif === null) {\n    return null\n  }\n  const msgStyle = {\n    color: \"green\",\n    fontSize: 20,\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n    borderStyle: \"solid\"\n  }\n  if (notif.type === \"error\")\n    msgStyle.color = \"red\"\n\n  return (\n    <div style={msgStyle} className=\"notification\">\n      {notif.msg}\n    </div>\n  )\n}\n\nconst Persons = ({persons, filter, setPersons}) => {\n  const deletePersonHandler = (deletedPerson) => {\n    return () => {\n      if (window.confirm(`delete person ${deletedPerson.name}?`)) {\n        phonebookService.deletePerson(deletedPerson)\n        .then(() => setPersons(persons.filter(person => person.id !== deletedPerson.id )))\n        .catch(error => console.log(error))\n      }\n    }\n  }\n  return persons.filter(person => filter==='' || (person.name && person.name.toLowerCase().includes(filter.toLowerCase())))\n    .map(person => {\n      return (\n        <p key={person.id}>{person.name} {person.number}\n        <button onClick={deletePersonHandler(person)}>delete</button></p>\n      )\n    })\n}\n\nconst Filter = ({nameFilter, setNameFilter}) => {\n  const handleNameFilterChange = (event) => {\n    setNameFilter(event.target.value)\n  }\n  return (\n    <div>\n    Filter <input value={nameFilter} onChange={handleNameFilterChange} />\n    </div>\n  )\n}\n\nconst PersonForm = ({persons, setPersons, newName, setNewName, newNumber, setNewNumber, setNotifMessage}) => {\n  const addPerson = (event) => {\n    event.preventDefault()\n    var existing = persons.find((person)=> person.name === newName)\n    if (existing) {\n      if (existing.number === newNumber)\n        window.alert(`${newName} is already in the phonebook`)\n      else {\n        if (window.confirm(`${newName} is already in the phonebook, update the old number with the new`)) {\n          var updated = {...existing, number:newNumber}\n          phonebookService.update(updated)\n          .then(result => {\n            setPersons(persons.map(person => person.id !== updated.id ? person : updated ))\n          })\n          .catch(() => {\n            setNotifMessage({type:\"error\", msg:`${existing.name} has already been removed from the server`})\n            setTimeout( () => setNotifMessage(null), 2000 )\n          })\n        }\n      }\n    }\n    else {\n      phonebookService.create({name:newName, number:newNumber})\n      .then(newPerson => {\n        setPersons(persons.concat(newPerson))\n        setNewName('')\n        setNewNumber('')\n        setNotifMessage({type:\"notif\", msg:`${newName} added to phonebook`})\n        setTimeout( () => setNotifMessage(null), 2000 )\n      })\n      .catch(error => {\n        console.log(\"cannot add new person\", error)\n        console.log(error.response.data)\n        setNotifMessage({type:\"error\", msg:`${error.response.data.error}`})\n        setTimeout( () => setNotifMessage(null), 4000 )\n        window.alert(error)\n      })\n    }\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n        name: <input value={newName} \n                  onChange={handleNameChange}\n            />\n      </div>\n      <div>\n        number: <input value={newNumber} \n                  onChange={handleNumberChange}\n            />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\n\nconst App = () => {\n\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ nameFilter, setNameFilter ] = useState('')\n  const [ notifMessage, setNotifMessage] = useState(null)\n\n  useEffect(() => {\n    console.log('effect')\n    phonebookService.getAll()\n    .then(response => {\n        console.log('promise fulfilled')\n        setPersons(response)\n    })\n  }, [])\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification notif={notifMessage} />\n      <Filter nameFilter={nameFilter} setNameFilter={setNameFilter} />\n\n      <h3>Add a new</h3>\n      <PersonForm persons={persons} setPersons={setPersons} \n                  newName={newName} setNewName={setNewName}\n                  newNumber={newNumber} setNewNumber={setNewNumber}\n                  setNotifMessage={setNotifMessage} />\n      <h3>Numbers</h3>\n      <Persons persons={persons} filter={nameFilter} setPersons={setPersons}/>  \n    </div>\n  )\n\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}